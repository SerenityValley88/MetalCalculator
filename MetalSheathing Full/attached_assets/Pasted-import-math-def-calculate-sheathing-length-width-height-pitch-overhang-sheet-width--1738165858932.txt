import math

def calculate_sheathing(length, width, height, pitch, overhang, sheet_width):
    """
    Dynamically calculates the required metal sheets for walls, gable ends, and roof.
    
    :param length: Length of the building (feet)
    :param width: Width of the building (feet)
    :param height: Wall height (feet)
    :param pitch: Roof pitch (x/12)
    :param overhang: Overhang length (inches)
    :param sheet_width: Sheet width (inches)
    :return: Dictionary with required sheets and lengths
    """
    
    # Convert sheet width and overhang from inches to feet
    sheet_width_ft = sheet_width / 12  
    overhang_ft = overhang / 12

    # Adjust building dimensions for overhang
    gable_width = width + 2 * overhang_ft  # Include overhang
    half_gable_width = gable_width / 2  # Half-width for triangle calculations
    
    # Calculate peak height using pitch
    peak_height = (half_gable_width) * (pitch / 12)

    # Calculate staggered gable sheet lengths
    gable_sheet_lengths = []
    num_sheets = math.ceil(width / sheet_width_ft)

    for i in range(num_sheets):
        sheet_length = height + ((peak_height / num_sheets) * i)  # Staggered increase
        sheet_length = math.ceil(sheet_length * 2) / 2  # Round up to nearest 0.5'
        gable_sheet_lengths.append(sheet_length)

    # Walls (unchanged)
    eave_wall_sheets = math.ceil(length / sheet_width_ft) * 2
    wall_sheet_length = height

    # Roof (unchanged)
    roof_run = half_gable_width
    roof_slope_length = math.sqrt(roof_run**2 + peak_height**2)
    roof_length = length + 2 * overhang_ft
    roof_sheets_per_side = math.ceil(roof_length / sheet_width_ft)
    roof_sheet_length = math.ceil(roof_slope_length * 2) / 2  # Round up to 0.5'
    total_roof_sheets = roof_sheets_per_side * 2

    return {
        "Eave Walls": {"Sheets": eave_wall_sheets, "Sheet Length": wall_sheet_length},
        "Gable Triangles": {"Sheets": num_sheets * 2, "Sheet Lengths": gable_sheet_lengths},
        "Roof": {"Sheets": total_roof_sheets, "Sheet Length": roof_sheet_length},
    }

# Example Usage
building_specs = calculate_sheathing(length=40, width=30, height=12, pitch=6, overhang=16, sheet_width=36)

# Display results
for section, details in building_specs.items():
    print(f"{section}: {details}")
